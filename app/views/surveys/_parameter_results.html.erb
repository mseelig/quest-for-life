<div class="tab-body">
  <h2>Number of Civilizations</h2>
  <h3>How many civilizations that might communicate with us are there in our galaxy?</h3>
	
  <label>Show age:</label>
  <select id="age_group">
    <option disabled="disabled">Choose:</option>
    <%= options_for_select(get_age_group_options, @age_group.id) %>
  </select>
	
	<div id="ages-group" style="width: 650px; height: 300px;"></div>
	<table id="data-ages-group" style="display:none;">
    <caption>Estimates by age group <%= @age_group.description %></caption>
    <thead>
      <tr>
        <th>Value</th>
        <th>Count</th>
      </tr>
    </thead>
    <tbody>
        <% @chart_options.each do |chart_option| %>
          <tr>
            <th><%= chart_option.to_s %></th>
            <td><%= get_chart_option_count({@parameter=>chart_option, :age_group_id=>@age_group.id}) %></td>
          </tr>
        <% end %>
    </tbody>
  </table>

  <label>Show gender:</label>
  <select id="gender">
    <option disabled="disabled">Choose:</option>
    <%= options_for_select(get_gender_options, @gender) %>
  </select>

	<div id="gender-group" style="width: 650px; height: 300px;"></div>

	<table id="data-gender-group" style="display:none;">
    <caption>Estimates for <%= @gender %></caption>
    <thead>
      <tr>
        <th>Value</th>
        <th>Count</th>
      </tr>
    </thead>
    <tbody>
        <% @chart_options.each do |chart_option| %>
          <tr>
            <th><%= chart_option %></th>
            <td><%= get_chart_option_count({@parameter=>chart_option, :gender=>@gender}) %></td>
          </tr>
        <% end %>
    </tbody>
  </table>

	<div id="all" style="width: 650px; height: 300px;"></div>

	<table id="data-all" style="display:none;">
    <caption>All Estimates</caption>
    <tbody>
        <% @chart_options.each do |chart_option| %>
          <tr>
            <th><%= chart_option.to_s %></th>
            <td><%= get_chart_option_count({@parameter=>chart_option}) %></td>
          </tr>
        <% end %>
    </tbody>
  </table>

</div>

<script>
var chart;
$(document).ready(function() {
	chart = new Highcharts.Chart({
		chart: {
			renderTo: 'ages-group',
			defaultSeriesType: 'column'
		},
		title: {
      text: <%= ('Estimates by age group ' + @age_group.description).to_json %>
		},
		xAxis: {
      categories: <%= @chart_options.map(&:to_s).to_json %>
		},
		yAxis: {
			title: {
				text: 'Number of Responses'
			}
		},
		tooltip: {
			formatter: function() {
				return '' + this.y +' users responded with '+ this.x.toLowerCase();
			}
		},
		plotOptions: {
			column: {
				data: 'data-ages-group',
				// define a custom data parser function for both series
				dataParser: function(data) {
					var table = document.getElementById(data),
						// get the data rows from the tbody element
						rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr'),
						// define the array to hold the real data
						result = [], 
						// decide which column to use for this series
						column = { 'Count': 0 }[this.options.name];
						
					// loop through the rows and get the data depending on the series (this) name
					for (var i = 0; i < rows.length; i++) {						
						result.push(
							parseInt(
								rows[i].getElementsByTagName('td')[column]. // the data cell
								innerHTML
							)
						);
					}
					return result;
				}
			}
		},
		credits: {
			enabled: false
		},
		legend: {
			enabled: false
		},
		series: [{
			name: 'Count'
		}]
	});
	
	
});

var chart;
$(document).ready(function() {
	chart = new Highcharts.Chart({
		chart: {
			renderTo: 'gender-group',
			defaultSeriesType: 'column'
		},
		title: {
      text: <%= ('Estimates by ' + @gender).to_json %>
		},
		xAxis: {
			categories: <%= @chart_options.map(&:to_s).to_json %>
		},
		yAxis: {
			title: {
				text: 'Number of Responses'
			}
		},
		tooltip: {
			formatter: function() {
				return '' + this.y +' users responded with '+ this.x.toLowerCase();
			}
		},
		plotOptions: {
			column: {
				data: 'data-gender-group',
				// define a custom data parser function for both series
				dataParser: function(data) {
					var table = document.getElementById(data),
						// get the data rows from the tbody element
						rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr'),
						// define the array to hold the real data
						result = [], 
						// decide which column to use for this series
						column = { 'Count': 0 }[this.options.name];
						
					// loop through the rows and get the data depending on the series (this) name
					for (var i = 0; i < rows.length; i++) {						
						result.push(
							parseInt(
								rows[i].getElementsByTagName('td')[column]. // the data cell
								innerHTML
							)
						);
					}
					return result;
				}
			}
		},
		credits: {
			enabled: false
		},
		legend: {
			enabled: false
		},
		series: [{
			name: 'Count'
		}]
	});
	
	
});

var chart;
$(document).ready(function() {
	chart = new Highcharts.Chart({
		chart: {
			renderTo: 'all',
			defaultSeriesType: 'column'
		},
		title: {
			text: 'All Estimates'
		},
		xAxis: {
			categories: <%= @chart_options.map(&:to_s).to_json %>
		},
		yAxis: {
			title: {
				text: 'Number of Responses'
			}
		},
		tooltip: {
			formatter: function() {
				return '' + this.y +' users responded with '+ this.x.toLowerCase();
			}
		},
		plotOptions: {
			column: {
				data: 'data-all',
				// define a custom data parser function for both series
				dataParser: function(data) {
					var table = document.getElementById(data),
						// get the data rows from the tbody element
						rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr'),
						// define the array to hold the real data
						result = [], 
						// decide which column to use for this series
						column = { 'Count': 0 }[this.options.name];
						
					// loop through the rows and get the data depending on the series (this) name
					for (var i = 0; i < rows.length; i++) {						
						result.push(
							parseInt(
								rows[i].getElementsByTagName('td')[column]. // the data cell
								innerHTML
							)
						);
					}
					return result;
				}
			}
		},
		credits: {
			enabled: false
		},
		legend: {
			enabled: false
		},
		series: [{
			name: 'Count'
		}]
	});
	
});

$(document).ready(function() {
  $('#age_group').change(function() {
    new_url = document.location.pathname + '?p=<%= @parameter %>&gender=<%= @gender %>&age_group_id=' + this.value;
    window.location.replace(new_url);
  });

  $('#gender').change(function() {
    new_url = document.location.pathname + '?p=<%= @parameter %>&gender=' + this.value + '&age_group_id=<%= @age_group.id %>';
    window.location.replace(new_url);
  });
});
</script>
